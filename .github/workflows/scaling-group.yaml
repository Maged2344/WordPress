name: Deploy to Scaling Group

on:
  push:
    branches:
      - master  # Trigger this workflow on pushes to the main branch

jobs:
  deploy-to-scaling-group:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Set up AWS CLI (for uploading to S3 and scaling group operations)
    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: 'us-east-1'


    - name: Update Instances in Scaling Group
      run: |
        echo "Fetching instance IDs from the scaling group..."
        TAR_FILE=$(aws s3 ls s3://maged-bucket/ --recursive | grep "app_" | head -n 1 | awk '{print $4}')
        SCALING_GROUP_NAME="wordpress-scaling"  # Replace with your scaling group name
        INSTANCE_IDS=$(aws autoscaling describe-auto-scaling-groups \
          --auto-scaling-group-name $SCALING_GROUP_NAME \
          --query "AutoScalingGroups[0].Instances[].InstanceId" \
          --output text)

        echo "Fetched Instance IDs: $INSTANCE_IDS"

        echo "Sending update command to all instances..."
        for INSTANCE_ID in $INSTANCE_IDS; do
          aws ssm send-command \
            --targets "Key=instanceIds,Values=$INSTANCE_ID" \
            --document-name "AWS-RunShellScript" \
            --comment "Update WordPress files from S3" \
            wordpress-scaling
            --parameters 'commands=["aws s3 cp s3://maged-bucket/$TAR_FILE /home/ubuntu/wordpress_tarballs/", "sudo tar -xzf /home/ubuntu/wordpress_tarballs/$TAR_FILE -C /home/ubuntu/wordpress_build", "sudo rsync -av --delete /home/ubuntu/wordpress_build/ /var/www/html/wordpress/" "sudo systemctl restart nginx"]'
        done
        echo "Cleaning up temporary files..."
        rm -rf $EXTRACT_PATH
        rm -rf $TAR_DIR
        echo "Update command sent successfully to all instances."
